---

- name: Downloading kubernetes worker binaries
  get_url:
    url: "{{ kube_download_url_base }}/{{ item }}"
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - kubelet
    # - kube-proxy

- name: Write cni plugins
  copy:
    src: "{{ cni_plugins_dir }}/bin/"
    dest: /opt/cni/bin
    mode: 0755

- name: Write config directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /var/lib/kubelet
  - /etc/cni/net.d

- name: Write configuration files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
  with_items:
    - src: "{{ config_base }}/ca.pem"
      dest: /var/lib/kubelet/ca.pem
    - src: "{{ config_base }}/kubelet-bootstrap.kubeconfig"
      dest: /var/lib/kubelet/bootstrap.kubeconfig
    - src: "99-loopback.conf"
      dest: "/etc/cni/net.d/99-loopback.conf"
    - src: "{{ config_base }}/kubelet-config-{{ inventory_hostname }}.yml"
      dest: "/var/lib/kubelet/kubelet-config.yml"
  # notify:
  #   - restart_kubelet

- name: Write kubelet systemd unit
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
  with_items:
    - src: "{{ config_base }}/kubelet-{{ inventory_hostname }}.service"
      dest: "/etc/systemd/system/kubelet.service"
  notify:
    - systemd_daemon_reload
    # - restart_kubelet

- name: Installation completed
  debug:
    msg: "Enabling '{{ inventory_hostname }}' ..."
  notify:
    - enable_worker_services
